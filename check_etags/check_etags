#!/usr/bin/perl -w
use strict;
use warnings;
use File::Basename;
use Getopt::Long;
use LWP::UserAgent;

my $app = basename($0);

# deal with unexpected problems.
$SIG{__DIE__} = sub { print "$app - @_"; exit 3; };

GetOptions(
  "r|runs=s"    => \( my $runs = 6 ),
  "t|timeout=s" => \( my $timeout = 20 ),
  "u|url=s"     => \( my $url ),
  "h|help"      => \&usage,
);

die "invalid timeout\n" unless $timeout =~ /^\d+$/;

# sanitise and check url
die "please supply a URL\n" unless defined $url;
$url = "http://" . $url unless $url =~ m!^http://!;

my $ua = LWP::UserAgent->new;
$ua->timeout($timeout);

my $etag;
for ( 1..$runs ) {
  my $current_etag = get_headers($ua, $url);

  if (defined $etag && $etag ne $current_etag) {
    print "CRIT: ETags don't match for $url\n";
    exit 2;
  }

  $etag = $current_etag;
}

print "OK: all etags match at '$url'\n";
exit 0;

#------------------------------------------#


sub get_headers {
  my $ua  = shift;
  my $url = shift;

  # check it worked
  my $response = $ua->get($url);

  unless ($response->is_success) {
    print "CRIT: Failed to request $url\n";
    exit 2;
  }

  my $etag = $response->header('ETag');
  die "no ETag returned from '$url'\n" unless $etag;

  return $etag;
}


#------------------------------------------#

sub usage {
  print<<EOU;

$app - Copyright (c) 2008 Dean Wilson. Licensed under the GPL

This script requests the given URL a number of times and compares the ETags
from each request. If any of them are inconsistent the script exits with a
return code of 2. If any of the requests come back without an ETag header
then the script will die with a 3.

This script was written to be used in conjunction with Nagios.

Usage Examples:
 $app   -r 10 -u www.example.org/image.png
 $app   -r 10 -u http://www.example.org/image.png
 $app   -h    # shows this information

Options:
  -r | --run
    Number of times to request the Etag for comparision. Defaults to 6
  -t | --timeout
    Number of seconds the URL requests should wait before timing out
  -u | --url
    The URL to check for consistency
  -h
    This help and usage information

EOU
  exit 3;
}
